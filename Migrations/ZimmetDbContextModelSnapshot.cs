// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZimmetGo.Data;

#nullable disable

namespace ZimmetGo.Migrations
{
    [DbContext(typeof(ZimmetDbContext))]
    partial class ZimmetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BakimKaydi", b =>
                {
                    b.Property<int>("BakimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BakimID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BakimDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BakimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemirbasID")
                        .HasColumnType("int");

                    b.HasKey("BakimID");

                    b.HasIndex("DemirbasID");

                    b.ToTable("BakimKayitlari");
                });

            modelBuilder.Entity("Demirbas", b =>
                {
                    b.Property<int>("DemirbasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DemirbasID"));

                    b.Property<DateTime>("AlımTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DemirbasAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Değer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LokasyonID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SonZimmetTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("DemirbasID");

                    b.HasIndex("LokasyonID");

                    b.ToTable("Demirbaslar");
                });

            modelBuilder.Entity("DemirbasDemirbasTuru", b =>
                {
                    b.Property<int>("DemirbasID")
                        .HasColumnType("int");

                    b.Property<int>("DemirbasTuruID")
                        .HasColumnType("int");

                    b.HasKey("DemirbasID", "DemirbasTuruID");

                    b.HasIndex("DemirbasTuruID");

                    b.ToTable("DemirbasDemirbasTurleri");
                });

            modelBuilder.Entity("DemirbasDurumGecmisi", b =>
                {
                    b.Property<int>("DurumGecmisiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DurumGecmisiID"));

                    b.Property<DateTime>("DegisiklikTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemirbasID")
                        .HasColumnType("int");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DurumGecmisiID");

                    b.HasIndex("DemirbasID");

                    b.ToTable("DemirbasDurumGecmisleri");
                });

            modelBuilder.Entity("DemirbasTuru", b =>
                {
                    b.Property<int>("DemirbasTuruID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DemirbasTuruID"));

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TürAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DemirbasTuruID");

                    b.ToTable("DemirbasTurleri");
                });

            modelBuilder.Entity("Departman", b =>
                {
                    b.Property<int>("DepartmanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanID"));

                    b.Property<string>("DepartmanAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaID")
                        .HasColumnType("int");

                    b.HasKey("DepartmanID");

                    b.HasIndex("FirmaID");

                    b.ToTable("Departmanlar");
                });

            modelBuilder.Entity("Firma", b =>
                {
                    b.Property<int>("FirmaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FirmaID"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirmaID");

                    b.ToTable("Firmalar");
                });

            modelBuilder.Entity("Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaID")
                        .HasColumnType("int");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SonZimmetTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyadı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciID");

                    b.HasIndex("FirmaID");

                    b.HasIndex("RolID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("Log", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<int>("DemirbasID")
                        .HasColumnType("int");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogID");

                    b.HasIndex("DemirbasID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Loglar");
                });

            modelBuilder.Entity("Lokasyon", b =>
                {
                    b.Property<int>("LokasyonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LokasyonID"));

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LokasyonAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LokasyonID");

                    b.ToTable("Lokasyonlar");
                });

            modelBuilder.Entity("Resim", b =>
                {
                    b.Property<int>("ResimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResimID"));

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DemirbasID")
                        .HasColumnType("int");

                    b.Property<byte[]>("ResimVerisi")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ResimID");

                    b.HasIndex("DemirbasID");

                    b.ToTable("Resimler");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RolAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("Zimmet", b =>
                {
                    b.Property<int>("ZimmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZimmetID"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int>("DemirbasID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IadeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ZimmetTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ZimmetID");

                    b.HasIndex("DemirbasID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Zimmetler");
                });

            modelBuilder.Entity("BakimKaydi", b =>
                {
                    b.HasOne("Demirbas", "Demirbas")
                        .WithMany("BakimKayitlari")
                        .HasForeignKey("DemirbasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demirbas");
                });

            modelBuilder.Entity("Demirbas", b =>
                {
                    b.HasOne("Lokasyon", "Lokasyon")
                        .WithMany("Demirbaslar")
                        .HasForeignKey("LokasyonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lokasyon");
                });

            modelBuilder.Entity("DemirbasDemirbasTuru", b =>
                {
                    b.HasOne("Demirbas", "Demirbas")
                        .WithMany("DemirbasTurleri")
                        .HasForeignKey("DemirbasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemirbasTuru", "DemirbasTuru")
                        .WithMany("Demirbaslar")
                        .HasForeignKey("DemirbasTuruID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demirbas");

                    b.Navigation("DemirbasTuru");
                });

            modelBuilder.Entity("DemirbasDurumGecmisi", b =>
                {
                    b.HasOne("Demirbas", "Demirbas")
                        .WithMany("DurumGecmisi")
                        .HasForeignKey("DemirbasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demirbas");
                });

            modelBuilder.Entity("Departman", b =>
                {
                    b.HasOne("Firma", "Firma")
                        .WithMany("Departmanlar")
                        .HasForeignKey("FirmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("Kullanici", b =>
                {
                    b.HasOne("Firma", "Firma")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("FirmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rol", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Log", b =>
                {
                    b.HasOne("Demirbas", "Demirbas")
                        .WithMany("Loglar")
                        .HasForeignKey("DemirbasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kullanici", "Kullanici")
                        .WithMany("Loglar")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demirbas");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Resim", b =>
                {
                    b.HasOne("Demirbas", "Demirbas")
                        .WithMany("Resimler")
                        .HasForeignKey("DemirbasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demirbas");
                });

            modelBuilder.Entity("Zimmet", b =>
                {
                    b.HasOne("Demirbas", "Demirbas")
                        .WithMany("Zimmetler")
                        .HasForeignKey("DemirbasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kullanici", "Kullanici")
                        .WithMany("Zimmetler")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demirbas");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Demirbas", b =>
                {
                    b.Navigation("BakimKayitlari");

                    b.Navigation("DemirbasTurleri");

                    b.Navigation("DurumGecmisi");

                    b.Navigation("Loglar");

                    b.Navigation("Resimler");

                    b.Navigation("Zimmetler");
                });

            modelBuilder.Entity("DemirbasTuru", b =>
                {
                    b.Navigation("Demirbaslar");
                });

            modelBuilder.Entity("Firma", b =>
                {
                    b.Navigation("Departmanlar");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("Kullanici", b =>
                {
                    b.Navigation("Loglar");

                    b.Navigation("Zimmetler");
                });

            modelBuilder.Entity("Lokasyon", b =>
                {
                    b.Navigation("Demirbaslar");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });
#pragma warning restore 612, 618
        }
    }
}
